# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

on:
  push:
    branches: [ main ]

jobs:
  build_push_image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Hugo
        run: sudo apt-get install -y hugo

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y powershell
          pwsh -Command "Install-Module -Name Az -AllowClobber -Force -Scope CurrentUser"
        
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push production images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest,${{secrets.ACR_NAME}}/contoso-website:${{ steps.fetch_version.output.TAG }}

          
  deploy:
        runs-on: ubuntu-latest
        needs: build_push_image
        permissions:
          id-token: write
          contents: read

        steps:
          - uses: actions/checkout@v2
      
          - name: Install Helm
            uses: Azure/setup-helm@v1
            with:
               version: v3.3.1

          - name: Sign in to Azure with OIDC
            uses: Azure/login@v1.5.1
            with:
             client-id: ${{ secrets.AZURE_CLIENT_ID }}
             tenant-id: ${{ secrets.AZURE_TENANT_ID }}
             subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
             
                   
          - name: Azure Kubernetes set context
            uses: Azure/aks-set-context@v3
            with:
              resource-group: ${{ secrets.RESOURCE_GROUP }}
              cluster-name: ${{ secrets.CLUSTER_NAME }}

          - name: Run Helm Deploy
            run: |
              helm upgrade \
               --install \
               --create-namespace \
               --atomic \
               --wait \
               --namespace staging \
                contoso-website \
                ./kubernetes/contoso-website \
               --set image.repository=${{ secrets.ACR_NAME }} \
               --set dns.name=${{ secrets.DNS_NAME }}
